services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - my-network

  kafka-server:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-server
    container_name: kafka-server
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-network
    depends_on:
      - zookeeper

  minecraft:
    # Container Image on dockerhub 
    image: itzg/minecraft-server:latest
    tty: true
    stdin_open: true
    # Port Mappings
    ports:
      - "25565:25565" # minecraft port
      - "19565:19565" # prometheus port
    env_file: .env # stores minecraft environment variables
    volumes:
    - ./mods:/data/mods
    - ${PWD}/server/minecraft_server.1.20.1.jar:/data #if for whatever reason ${PWD} doesn't work, change ${PWD} to . for the relative directory
    networks:
      my-network:
        aliases:
          - minecraft

  kafka-producer:
    image: python:3.10
    container_name: kafka-producer
    working_dir: /app
    volumes:
      - ./producer_script.py:/app/producer_script.py
      - ./requirements.txt:/app/requirements.txt
      - minecraft_data:/minecraft_logs
    command: >
      /bin/sh -c "
      pip install --no-cache-dir -r requirements.txt &&
      python producer_script.py
      "
    networks:
      - my-network
    depends_on:
      - kafka-server
      - minecraft

  prometheus:
    image: prom/prometheus:v2.30.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      my-network:
        aliases:
        - prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin1234"  
    networks:
      my-network:
        aliases:
          - grafana
    depends_on:
      - prometheus
    
networks:
  my-network:
    driver: bridge

volumes:
  minecraft_data:
    driver: local