version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - my-network

  kafka-server:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-server
    container_name: kafka-server
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-network
    depends_on:
      - zookeeper

  minecraft:
    # Container Image on dockerhub 
    image: itzg/minecraft-server
    tty: true
    stdin_open: true
    # Port Mappings
    ports:
      - "25565:25565"
    # Environment Variables
    environment:
      EULA: "TRUE"
    volumes:
    - minecraft_data:/data

  kafka-producer:
    build: ./mc_producer
    container_name: kafka-producer-mc
    working_dir: /app
    volumes:
      - minecraft_data:/minecraft_logs
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    networks:
      - my-network
    depends_on:
      - kafka-server
      - minecraft

  kafka-producer-docker-metrics:
    build: ./docker_metrics_producer
    container_name: kafka-producer-docker-metrics
    working_dir: /app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    networks:
      - my-network
    depends_on:
      - kafka-server
      - minecraft
networks:
  my-network:
    driver: bridge

volumes:
  minecraft_data:
    driver: local